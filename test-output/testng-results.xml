<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-23T14:35:31 IST" name="Suite" finished-at="2025-02-23T14:35:32 IST" duration-ms="253">
    <groups>
      <group name="Smoke">
        <method signature="ORC.ORCCreateUserWith()[pri:0, instance:test.ORC@6c80d78a]" name="ORCCreateUserWith" class="test.ORC"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-02-23T14:35:31 IST" name="Regression" finished-at="2025-02-23T14:35:31 IST" duration-ms="92">
      <class name="test.Benifits">
        <test-method signature="BenifitsCreateSalary(java.lang.String,java.lang.String)[pri:0, instance:test.Benifits@4b5d6a01]" started-at="2025-02-23T14:35:31 IST" name="BenifitsCreateSalary" finished-at="2025-02-23T14:35:31 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BenifitsCreateSalary -->
        <test-method signature="BenifitsUpdateTheSalary()[pri:0, instance:test.Benifits@4b5d6a01]" started-at="2025-02-23T14:35:31 IST" name="BenifitsUpdateTheSalary" finished-at="2025-02-23T14:35:31 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BenifitsUpdateTheSalary -->
        <test-method signature="beforeClass(java.lang.String)[pri:0, instance:test.Benifits@4b5d6a01]" started-at="2025-02-23T14:35:31 IST" name="beforeClass" finished-at="2025-02-23T14:35:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="beforeAlltheMethod()[pri:0, instance:test.Benifits@4b5d6a01]" started-at="2025-02-23T14:35:31 IST" name="beforeAlltheMethod" finished-at="2025-02-23T14:35:31 IST" depends-on-methods="test.Benifits.beforeClass, test.Benifits.BenifitsUpdateTheSalary" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeAlltheMethod -->
      </class> <!-- test.Benifits -->
    </test> <!-- Regression -->
    <test started-at="2025-02-23T14:35:32 IST" name="Regression2" finished-at="2025-02-23T14:35:32 IST" duration-ms="16">
      <class name="test.ORC">
        <test-method is-config="true" signature="ORCRehireUserWith()[pri:0, instance:test.ORC@6c80d78a]" started-at="2025-02-23T14:35:32 IST" name="ORCRehireUserWith" finished-at="2025-02-23T14:35:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ORCRehireUserWith -->
        <test-method signature="CleanUpopartion()[pri:0, instance:test.ORC@6c80d78a]" started-at="2025-02-23T14:35:32 IST" name="CleanUpopartion" finished-at="2025-02-23T14:35:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CleanUpopartion -->
        <test-method signature="ORCCreateUserWith()[pri:0, instance:test.ORC@6c80d78a]" started-at="2025-02-23T14:35:32 IST" name="ORCCreateUserWith" finished-at="2025-02-23T14:35:32 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ORCCreateUserWith -->
        <test-method is-config="true" signature="Manager()[pri:0, instance:test.ORC@6c80d78a]" started-at="2025-02-23T14:35:32 IST" name="Manager" finished-at="2025-02-23T14:35:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Manager -->
      </class> <!-- test.ORC -->
    </test> <!-- Regression2 -->
    <test started-at="2025-02-23T14:35:32 IST" name="Regression3" finished-at="2025-02-23T14:35:32 IST" duration-ms="33">
      <class name="test.CoreHR">
        <test-method signature="CoreHRCreateUserWith()[pri:0, instance:test.CoreHR@5af3afd9]" started-at="2025-02-23T14:35:32 IST" name="CoreHRCreateUserWith" finished-at="2025-02-23T14:35:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CoreHRCreateUserWith -->
        <test-method signature="CoreHRRehireUserWith()[pri:0, instance:test.CoreHR@5af3afd9]" started-at="2025-02-23T14:35:32 IST" name="CoreHRRehireUserWith" finished-at="2025-02-23T14:35:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CoreHRRehireUserWith -->
        <test-method signature="CoreHRUpdateFirstName()[pri:0, instance:test.CoreHR@5af3afd9]" started-at="2025-02-23T14:35:32 IST" name="CoreHRUpdateFirstName" finished-at="2025-02-23T14:35:32 IST" duration-ms="20" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.CoreHR.CoreHRUpdateFirstName(CoreHR.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CoreHRUpdateFirstName -->
      </class> <!-- test.CoreHR -->
    </test> <!-- Regression3 -->
  </suite> <!-- Suite -->
</testng-results>
